Nightingale Cipher

=================================================
DESCRIPTION:
=================================================
To be added...

=================================================
Insert into OpenSSL and OpenSSL's EVP
=================================================
1) Download...
    OpenSSL:	 wget https://github.com/openssl/openssl/archive/master.zip
    Nightingale: wget https://github.com/rschmicker/Nightingale/archive/master.zip

2) Move some files around...
    a) nightgale/:  Nightingale/openssl_migration -> openssl/crypto/
    b) e_night.c:   Nightingale/openssl_migration -> openssl/crypto/evp
    c) nightgale.h: Nightingale/openssl_migration -> openssl/include/openssl

3) Time to edit some files...
    a) crypto/evp/build.info to include compiling of e_night.c

	e_night.c e_xcbc_d.c e_rc2.c e_cast.c e_rc5.c \

    b) crypto/evp/c_allc.c to include loading of cipher:
	
	void openssl_add_all_ciphers_int(void)
	{
    	    EVP_add_cipher(EVP_nightgale());
	    EVP_add_cipher_alias(SN_nightgale, "nightgale");

    c) crypto/objects/objects.txt to include nightgale cipher around line 864:
	
	#Nightgale
			: NIGHTGALE : nightgale
	
	# AES aka Rijndael

	!Alias csor 2 16 840 1 101 3
	!Alias nistAlgorithms csor 4
	!Alias aes nistAlgorithms 1

    d) Configure in openssl root directory to include nightgale in compilation around line 315:

 	"md2", "md4", "md5", "nightgale", "sha",

    e) util/mkdef.pl to include header file for nightgale around line 270:

 	$crypto.=" include/openssl/nightgale.h";

    f) include/openssl/evp.h to add in EVP_nightgale() around line 727:

	const EVP_CIPHER *EVP_nightgale(void);

4) Let's give it a test!
    a) move: 
	    compile_night_evp_test.sh
	    compile_night_test.sh 
	    night_evp_test.c 
	    night_test.c  
       to the root directory of openssl

    b) edit make -j <thread count> in both shell scripts to account for the number of threads

    c) make shell scripts excutable with chmod 755

    d) run 'em both!
 	i)   both scripts will create a 1GB random buffer

 	ii)  then encrypt and decrypt the buffer

	iii) once finished it will compare the original buffer 
	     to the decrypted buffer and make sure they are equal
	
	iv)  and compare the original buffer to the encrypted buffer 
	     and make sure they are not equal

	v)   the evp script uses the EVP interface and the latter 
	     directly calls the nightgale functions
	
	vi)  the evp script also makes a call to the speedtest 
	     integrated into OpenSSL
    
    e) for completeness sake
	i) run 'make test' in the root directory of openssl to 
           perform OpenSSL's unit test
