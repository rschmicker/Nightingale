Nightingale Cipher

=================================================
DESCRIPTION:
=================================================
To be added...

=================================================
Insert into OpenSSL and OpenSSL's EVP
=================================================
1) Download...
    OpenSSL:	 wget https://github.com/openssl/openssl/archive/master.zip
    Nightingale: wget https://github.com/rschmicker/Nightingale/archive/master.zip

2) Move some files around...
    a) nightgale folder under Nightingale/openssl_migration to openssl/crypto/
    b) e_night.c under Nightingale/openssl_migration to openssl/crypto/evp
    c) nightgale.h under Nightingale/openssl_migration to openssl/include/openssl

3) Time to edit some files...
    a) crypto/evp/build.info to include compiling of e_night.c
    b) crypto/evp/c_allc.c to include loading of cipher:
        EVP_add_cipher(EVP_nightgale());
	EVP_add_cipher_alias(SN_nightgale, "nightgale");
    c) crypto/objects/objects.txt to include nightgale cipher before aes as such around line 864:
	#Nightgale
			: NIGHTGALE : nightgale
    d) Configure in openssl directory to include nightgale in compilation as such around line 315:
 	"md2", "md4", "md5", "nightgale", "sha",
    e) util/mkdef.pl to include header file for nightgale as such around line 270:
 	$crypto.=" include/openssl/nightgale.h";
    f) include/openssl/evp.h to add in EVP_nightgale() as such around line 727:
	const EVP_CIPHER *EVP_nightgale(void);

4) Let's give it a test!
    a) move compile_night_evp_test.sh, compile_night_test.sh, night_evp_test.c, and night_test.c to the root directory of openssl
    b) edit make -j <thread count> in both scripts to account for your number of threads
    c) make shell scripts excutable with chmod
    d) run 'em both!
 	i) both scripts will create a 1GB random buffer
 	ii) encrypt and decrypt the buffer
	iii) compare the original buffer and the decrypted buffer to make sure they are equal
	iv) compare the original and the encrypted buffer and make sure they are not equal
	v) the evp script uses the EVP interface and the other script simply directly calls the nightgale functions
	vi) the evp script also makes a call to the speedtest integrated into OpenSSL
    e) for completeness sake
	i) run 'make test' in the root directory of openssl to perform OpenSSL's unit test
